---
layout: default
title:  "Go дайджест #3: Go 1.10.2 and 1.9.6, новый брендинг для Go, NGINX Unit 1.0 сервер приложений с поддержкой Go"
date:   2018-05-05 14:10:12 +0200
categories: [go, digest]
---

_В выпуске: vgo proposal — accepted, руководство по Go компилятору, способ хранения «чувствительных» данных и множество инструментов._

## Новости

[Go 1.10.2 and Go 1.9.6 Released](https://groups.google.com/forum/#!msg/golang-announce/qXEbop4t-Wg/tOHb-KE3BAAJ) — в основном мелкие багфиксы.

[Go’s New Brand](https://blog.golang.org/go-brand) — новый бренд и лого. Можно скачать [«brand book»](https://storage.googleapis.com/golang-assets/go-brand-book-v1.0.1.pdf).

[NGINX Unit 1.0: An App Server That Supports Go (and Others)](https://www.nginx.com/blog/nginx-unit-1-0-released/) — NGINX Unit теперь production ready.

[The vgo Proposal Has Been Marked as Accepted](https://github.com/golang/go/issues/24301#issuecomment-384349642)

## Почитать

[Automate Chrome with Go and the Chrome Debugging Protocol](https://www.ribice.ba/golang-chrome-automation/) — автоматизация Chrome browser при помощи Go и ChromeDP.

[Google Releases gVisor, a Sandboxed Container Runtime](https://cloudplatform.googleblog.com/2018/05/Open-sourcing-gVisor-a-sandboxed-container-runtime.html) — изолированный рантайм для контейнеров.

[An Official Introduction to the Go Compiler](https://github.com/golang/go/blob/master/src/cmd/compile/README.md) — краткое руководство по Go компилятору.

[Processing Data with Clojure and Go](https://cjohansen.no/processing-data-with-clojure-and-golang/) — сравнение производительности двух языков.

[How to Write Better Unit Tests in Go Using Mocks](https://medium.com/@peter.gtz/how-to-write-better-unit-tests-in-go-using-mocks-4dd05e867b17) — статья о том, как мокать сервисы используя [Pegomock](https://github.com/petergtz/pegomock) mocking framework.

[Securely Logging and Tracing HTTP Requests in Go](https://zvelo.com/securely-logging-tracing-http-requests-go/) — один из способов хранения «чувствительных» данных.

[Some Common Concurrent Programming Mistakes](https://go101.org/article/concurrent-common-mistakes.html) — часто допускаемые ошибки при работе с concurrency.

[Asynchronous Processing with Go using Kafka and MongoDB](https://www.melvinvivas.com/developing-microservices-using-kafka-and-mongodb/) — простой пример сложной архитектуры.

[Parsing Large XML Files in Streaming Mode in Go](http://bionics.it/posts/parsing-drugbank-xml-or-any-large-xml-file-in-streaming-mode-in-go)

[Scraping the Web with Colly and Goquery](https://benjamincongdon.me/blog/2018/03/01/Scraping-the-Web-in-Golang-with-Colly-and-Goquery/)

[Building Go Projects with Docker on Gitlab CI](https://seandrumm.co.uk/blog/building-go-projects-with-docker-on-gitlab-ci/)

[Implementing Passwordless Auth for a Go HTTP API](https://nicolasparada.netlify.com/posts/passwordless-auth-server/)

## Посмотреть

[Go Best Practices](https://www.youtube.com/watch?v=MzTcsI6tn-0) — практики и принципы написания кода «like the Go team».

## Инструменты и библиотеки

[Parcello](https://github.com/phogolabs/parcello) — менеджер ресурсов для встраивания скриптов, картинок в бинарники.

[Gojay](https://github.com/francoispqt/gojay) — высокопроизводительный json encoder/decoder.

[Corral](https://github.com/bcongdon/corral) — Serverless MapReduce фреймворк на AWS Lambda.

[TextQL](https://github.com/dinedal/textql) — позволяет легко выполнять SQL для структурированного текста, такого как CSV или TSV. Под капотом он вставляет CSV в SQLite.

[bed](https://github.com/itchyny/bed) — Binary/Hex редактор.

[Got-qt](https://github.com/amlwwalker/got-qt) — фреймворк для разработки кроссплатформенных GUI на Go и QML.

[gotop](https://github.com/cjbassi/gotop) — Activity Monitor для терминала.

[Ironclad](https://github.com/dmulholland/ironclad) — менеджер паролей для командной строки.

[gsocks5](https://github.com/buraksezer/gsocks5) — надежный SOCKS5 сервер.

[haminer](https://github.com/shuLhan/haminer) — библиотека для парсинга и форварда логов HAProxy в InfuxDB.

[Spaniel](https://github.com/senseyeio/spaniel) — библиотека для управления временными интервалами.

[duit](https://github.com/mjl-/duit) — кроссплатформенный UI Toolkit.

[govalidator](https://github.com/thedevsaddam/govalidator) — request валидатор. Вдохновлен Laravel request валидатором.

[Muffet](https://github.com/raviqqe/muffet) — утилита для рекурсивной проверки ссылок на сайте.

[olricdb](https://github.com/buraksezer/olricdb) — распределенное, In-Memory Key/Value хранилище.
