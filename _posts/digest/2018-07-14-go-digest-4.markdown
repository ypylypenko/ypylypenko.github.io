---
layout: default
title:  "Go дайджест #4: Go 1.11 Beta 1, WebAssembly and Go, GraphQL, Apple Metal API and Go"
date:   2018-07-14 14:10:12 +0200
categories: [go, digest]
---

_В выпуске: как писать проекты на Go в 2018 году, High Performance Go, ТОП-1000 GitHub-репозиториев, отсортированных по количеству звезд._

## Новости

[Go 1.10.3 and Go 1.9.7 Released](https://groups.google.com/forum/#!msg/golang-announce/_S9YQriFKuU/n6Q9DEpoAwAJ) — минорный релиз с исправлениями в GoCommand, crypto/tls, crypto/x509.

[Go 1.11 Beta 1 Released](https://groups.google.com/forum/#!msg/golang-nuts/vpVOVVMLa08/oQQQWX3rCgAJ) — не поддерживает vgo (ожидается в beta 2), но поддерживает WebAssembly output. [Draft release notes.](https://tip.golang.org/doc/go1.11)

[Go на <nobr>3-м</nobr> месте](https://www.hntrends.com/2018/apr-golang-jumps-into-top-10.html?compare1=javascript&compare2=python&compare3=golang&compare4=ruby) среди самых популярных языков программирования в „Hacker News’s Hiring Trends”.

## Tutorials & Articles

[How to Start A Go Project in 2018](https://boyter.org/posts/how-to-start-go-project-2018/)

[Binding Go Structures to JS References in WebAssembly](https://medium.zenika.com/go-webassembly-binding-structures-to-js-references-4eddd6fd4d23)

[Web Assembly and Go: A Look to The Future](https://brianketelsen.com/web-assembly-and-go-a-look-to-the-future/)

[GopherJS vs WebAssembly for Go](https://dev.to/hajimehoshi/gopherjs-vs-webassembly-for-go-148m)

[Using Go for WebAssembly Applications](https://sebastian-holstein.de/post/2018-07-05-go-wasm-application/)

[Using Interfaces and Dependency Injection to Future Proof Your Designs](https://medium.com/dm03514-tech-blog/you-are-going-to-need-it-using-interfaces-and-dependency-injection-to-future-proof-your-designs-2cf6f58db192)

[Writing a Simple Shell in Go](https://sj14.gitlab.io/post/2018-07-01-go-unix-shell/) — еще один пример, который показывает, насколько хороша стандартная библиотека.

[Storing Go Structs in Redis using ReJSON](https://itnext.io/storing-go-structs-in-redis-using-rejson-dab7f8fc0053?gi=32e9508e01cd)

[Getting Started with GraphQL from Go](https://www.thepolyglotdeveloper.com/2018/05/getting-started-graphql-golang/)

[Using GraphQL with Microservices in Go](https://outcrawl.com/go-graphql-gateway-microservices/) — пример разработки интернет-магазина.

[How to Create a Search Microservice](https://ryanmccue.ca/how-to-create-a-search-microservice/) — разработка поискового микросервиса с использованием ElasticSearch.

[Realtime Chat with GraphQL Subscriptions in Go](https://outcrawl.com/go-graphql-realtime-chat/)

[Building a Microservice in Go Following the CQRS Pattern](https://outcrawl.com/go-microservices-cqrs-docker/)

[Rendering a Triangle with Apple’s Metal API Using Go](https://dmitri.shuralyov.com/blog/26)

[An Exploration of Go Memory Management](https://povilasv.me/go-memory-management/) — обзор того, как работают Go allocators, и различных способов управления памятью.

[Using Job Queues in Go for Resilient Systems](https://blog.gojekengineering.com/using-job-queues-in-go-for-resilient-systems-638526316e7e?gi=c5a799db6567) — Proof-of-concept используя RabbitMQ.

[Faster Test Driven Development With Go on macOS](http://tysonmaly.com/programming/go/test-driven-developement-with-golang-on-osx/) — используем fswatch и grc для автоматического запуска релевантных тестов при каждом изменении кода.

[How to Write Bulletproof Code in Go](https://medium.freecodecamp.org/how-to-write-bulletproof-code-in-go-a-workflow-for-servers-that-cant-fail-10a14a765f22)

[Backing Up GitHub and GitLab Repositories Using Go](https://www.linuxjournal.com/content/back-github-and-gitlab-repositories-using-golang)

[Writing gRPC Interceptors in Go](https://medium.com/@shijuvar/writing-grpc-interceptors-in-go-bf3e7671fe48)

[How to Setup gRPC Service to Service Communication](https://ryanmccue.ca/how-to-setup-grpc-service-to-service-communication/)

[Building Scalable Web Services in Go](https://medium.com/myntra-engineering/my-journey-with-golang-web-services-4d922a8c9897)

[Packaging a Go Application for macOS](https://medium.com/@mattholt/packaging-a-go-application-for-macos-f7084b00f6b5) — „упаковка” Go приложений без использования Xcode.

[Protecting API Access with JWT](https://scene-si.org/2018/05/08/protecting-api-access-with-jwt/) — пример использования JSON Web Tokens (JWT) для аутентификации API.

[Rolling a Basic Go Microservice with MongoDB and Docker Multi-Stage Builds](https://www.melvinvivas.com/my-first-go-microservice/)

[A Step-by-Step Guide to Go Internationalization](https://phraseapp.com/blog/posts/internationalization-i18n-go/)

[Go Code Refactoring: The 23x Performance Hunt](https://medium.com/@val_deleplace/go-code-refactoring-the-23x-performance-hunt-156746b522f7)

[Exploring The Landscape of Go Testing Frameworks](https://bmuschko.com/blog/go-testing-frameworks/)

[Компилятор Go: язык описания правил SSA оптимизаций](https://habr.com/post/415771/)

## Посмотреть

[High Performance Go](https://www.youtube.com/watch?v=ADT25tuAx4A) — использование performance tools, встроенных в Go runtime, GC и GC-friendly код.

[Getting Started with OAuth2 in Go](https://www.youtube.com/watch?v=OdyXIi6DGYw)

[Understanding Running Go Programs through Profiling](https://www.youtube.com/watch?v=FJQjUueBJ2A)

[justforfunc #36: Versions, build constraints, and ldflags](https://www.youtube.com/watch?v=-XSlev-d7UY&feature=youtu.be)

[justforfunc #37: sync.Pool from the pool](https://www.youtube.com/watch?v=rfXSrgIGrKo)

[GOTO 2018: Containers From Scratch](https://www.youtube.com/watch?v=8fi7uSYlOdc)

## Инструменты и библиотеки

[Топ 1000 Github репозиториев, отсортированных по количеству звезд](https://github.com/kaxap/arl/blob/master/README-Go.md)

[httpu:](https://github.com/hazbo/httpu) ’Terminal-First’ HTTP клиент.

[ULID (Universally Unique Lexicographically Sortable Identifier):](https://github.com/oklog/ulid) более эффективная альтернатива GUID / UUID.

[Gaia:](https://github.com/gaia-pipeline/gaia) платформа для автоматизации, позволяющая создать мощные пайплайны. На основе HashiCorp’s go-plugin и gRPC поверх HTTP2.

[Form:](https://github.com/joncalhoun/form) создание HTML форм при помощи Go Structs.

[pb:](https://github.com/cheggaaa/pb) Progress Bar для консольных приложений.

[Fathom:](https://github.com/usefathom/fathom) аналитика для сайтов.

[fastjson:](https://github.com/valyala/fastjson) еще одна библиотека для парсинга JSON.

[Micro:](https://github.com/zyedidia/micro) nano-подобный текстовый редактор.

[Remark:](https://github.com/umputun/remark) система комментариев не отслеживающая пользователей. [Демо.](https://remark42.com/demo/)

[httpstat:](https://github.com/davecheney/httpstat) визуализация статистики HTTP запросов.

[xorm:](https://github.com/go-xorm/xorm) ORM для Go с поддержкой MySQL, Postgres, TiDB, SQLite, MS SQL, и Oracle.

[go-heroku:](https://gitlab.com/sj14/go-heroku#readme) деплоймент Go в Heroku при помощи GitLab CI.

[go-mysql-elasticsearch:](https://github.com/siddontang/go-mysql-elasticsearch) синхронизация данных из MySQL в Elasticsearch.

[recaptcha:](https://github.com/romanyx/recaptcha) Go обертка для reCAPTCHA.

[WTF:](https://github.com/senorprogrammer/wtf) информационный дашборд в терминале.

[Golimit:](https://github.com/myntra/golimit) распределенный и децентрализованный rate limiter.

[php-parser:](https://github.com/z7zmey/php-parser) A PHP Parser, использующий `goyacc` и `golex` библиотеки для для парсинга PHP в AST. [Демо.](https://php-parser.com/)

[stripe-go:](https://github.com/stripe/stripe-go/blob/master/v32_migration_guide.md) библиотека для работы со Stripe API.

[Pion WebRTC:](https://github.com/pions/webrtc) имплементация WebRTC Native Api на Go.

[Mort:](https://github.com/aldor007/mort) S3 совместимое хранилище и сервер обработки изображение. Умеет делать resize, rotate и crop изображений, конвертировать в разные форматы.

[Liman:](https://github.com/salihciftci/liman) Webapp для мониторинга Docker.

[githubv4:](https://github.com/shurcooL/githubv4) библиотека для GitHub’s GraphQL API v4

[sbr-go:](https://github.com/maciejkula/sbr-go) Sequence-Based система прогнозирования

[Blush:](https://github.com/arsham/blush) ’Цветной grep’. Утилита, позволяющая указать цвет для каждого совпадения.

[jp:](https://github.com/sgreben/jp) Bar charts, line charts, scatter plots, histograms в терминале.

[consulacl:](https://github.com/anexia-it/consulacl) библиотека для работы с Consul ACLs

[Pigo:](https://github.com/esimov/pigo) Face Detection библиотека, основанная на подходе [Pixel Intensity Comparison-based Object (PICO) detection](https://arxiv.org/pdf/1305.4537.pdf).

← Предыдущий выпуск: [Go дайджест #3](https://dou.ua/lenta/digests/go-digest-3/).  
Следующий выпуск: [Go дайджест #5](https://dou.ua/lenta/digests/go-digest-5/) →
