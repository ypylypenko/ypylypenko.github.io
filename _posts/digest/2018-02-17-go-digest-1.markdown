---
layout: default
title:  "Go дайджест #1: Go 1.10rc2, dep dependency management, SOLID в Go"
date:   2018-02-17 14:10:12 +0200
categories: [go, digest]
---

_В выпуске: гайд по написанию Dockerfiles для Go, туториал по организации пакетов, introduction to testing in Go, high performance Go._

## Новости

[Go 1.8.7, 1.9.4, and 1.10rc2 Released Due to Security Issue](https://groups.google.com/forum/#!msg/golang-announce/X7N1mvntnoU/jlQ4qXf6AAAJ)

[Go Project Now Accepts Pull Requests via GitHub](https://github.com/golang/go/wiki/GerritBot) — теперь контрибьютить в Go можно и с помощью пул реквестов в GitHub.

[Announcing dep v0.4.1, Now With Documentation](https://golang.github.io/dep/blog/2018/01/23/announce-v0.4.0.html) — теперь у dep есть [официальный сайт](https://golang.github.io/dep/) и[ онлайн-документация](https://golang.github.io/dep/docs/introduction.html).

## Почитать

[Fix в Go 1.9 ускорил GitLab RPC Service в 30 раз](https://about.gitlab.com/2018/01/23/how-a-fix-in-go-19-sped-up-our-gitaly-service-by-30x/)

[Гайд по публикации библиотек](https://darahayes.com/publishing-golang-libraries-comprehensive-guide/) — управление зависимостями, документация, тесты, CI и лицензирование.

Совсем недавно NGINX [добавили](https://hg.nginx.org/nginx/rev/641306096f5b) поддержку HTTP2 Server Push. [Туториал о том, как использовать это с Go.](https://ops.tips/blog/nginx-http2-server-push/)

[Гайд по написанию Dockerfiles для Go](https://blog.hasura.io/the-ultimate-guide-to-writing-dockerfiles-for-go-web-apps-336efad7012c?gi=e2667ca14e1c) — пошаговое создание Dockerfile с live reloading и управлением зависимостями.

[Туториал по созданию и управлению macOS LaunchAgents](https://ieftimov.com/create-manage-macos-launchd-agents-golang) — launchd, использование text/template для создание plist файлов, обработка сигналов, разница между «агентами» и «демонами».

В Go 1.8 добавлен инструмент для тестирования бета-версий и релиз-кандидатов. [Туториал о том, как его использовать.](https://pocketgophers.com/trying-other-versions/)

[Using ’dep’ For Day-To-Day Dependency Management](https://golang.github.io/dep/docs/daily-dep.html) — детальный разбор команд «dep ensure» и «dep status».

[An Intro to dep: How to Manage Your Go Project Dependencies](https://medium.freecodecamp.org/an-intro-to-dep-how-to-manage-your-golang-project-dependencies-7b07d84e7ba5) — туториал по управлению зависимостями в Go проектах.

[Packing Multiple Binaries in a Go Package](https://ieftimov.com/golang-package-multiple-binaries) — туториал по организации пакетов, для новичков.

[Туториал по разработке JSON API](https://pragmacoders.com/building-a-json-api-in-golang/)

[Создание «URL Shortener» API при помощи Goa Framework](https://ryanmccue.ca/creating-a-url-shortener-api-with-the-goa-golang-framework/)

[Clean Architecture on Golang](https://hackernoon.com/golang-clean-archithecture-efd6d7c43047) — один из подходов к архитектуре вашего приложения.

[Принцип SOLID в языке Go](https://habrahabr.ru/post/348852/) — перевод статьи от Dave Chaney [«Solid Go Design»](https://dave.cheney.net/2016/08/20/solid-go-design).

[Туториал по написанию игры «Space invaders»](https://sausheong.github.io/posts/space-invaders-with-go/)

## Посмотреть

[The State of Go 1.10](https://www.youtube.com/watch?v=iR7LPAXWfmw)

[Concurrency Patterns in Go](https://www.youtube.com/watch?v=rDRa23k70CU)

[Two Ways of Merging a Number of Channels into One](https://www.youtube.com/watch?v=B64hIRjNvLc)

[High Performance Go](https://www.infoq.com/presentations/go-programming-language)

[Advanced Go Debugging with Delve](https://www.youtube.com/watch?v=VBiFiguj52I)

[An Introduction to Testing in Go](https://www.youtube.com/watch?v=GlA57dHa5Rg)

[Helpful Go Practices: Working with Time](https://www.youtube.com/watch?v=2IAzxPAoVi0)

[Creating GopherJS Apps with gRPC-Web](https://www.youtube.com/watch?v=R2HaxH7Et64)  
Using gRPC and Protocol Buffers from backend to browser.

## Инструменты и библиотеки

[wsify (Websocketify):](https://github.com/alash3al/wsify) Realtime Pub/Sub Server

[goben:](https://github.com/udhos/goben) инструмент для измерения пропускной способности TCP/UDP между хостами.

[Miniflux:](https://miniflux.net/) минималистичный RSS ридер.

[Go-Chassis:](https://github.com/ServiceComb/go-chassis) SDK для быстрой разработки микросервисов.

[GRV:](https://github.com/rgburke/grv) консольный интерфейс для просмотра git репозиториев.

[cam2ip:](https://github.com/gen2brain/cam2ip) библиотека, которая превращает любую web-камеру в IP камеру.

[DNSCrypt-Proxy 2:](https://github.com/jedisct1/dnscrypt-proxy) DNS прокси с поддержкой современных протоколов [DNSCrypt v2](https://github.com/DNSCrypt/dnscrypt-protocol/blob/master/DNSCRYPT-V2-PROTOCOL.txt) и[ DNS-over-HTTP/2](https://tools.ietf.org/html/draft-ietf-doh-dns-over-https-03).

[url2img:](https://github.com/gen2brain/url2img) HTTP Server c API для создания скриншотов веб-сайтов.

[goiv:](https://github.com/gen2brain/goiv) просмотрщик изображений.

[Caire:](https://github.com/esimov/caire) библиотека для ресайза изображений с учетом содержимого.

[packr:](https://github.com/gobuffalo/packr) библиотека для встраивания статики в бинарники Go.

[GoReleaser:](https://goreleaser.com/) инструмент для автоматизации релизов.

[JSON-to-Go:](https://mholt.github.io/json-to-go/) инструмент для преобразования JSON в Go структуру на лету.

[Commandeer:](https://github.com/jaffee/commandeer) автоматически устанавливает флаги командной строки на основе полей структур и их тегов.

[Butler:](https://github.com/netzkern/butler) инструмент для автоматизации создания новых проектов. Может создавать новые проекты на основе шаблонов, которые являются простыми git репозиториями.

[php-parser:](https://github.com/z7zmey/php-parser) PHP парсер на Go. Поддерживает синтаксис PHP 7 и PHP 5.

[go-server-timing:](https://github.com/mitchellh/go-server-timing) библиотека для использования [HTTP Server-Timing](https://www.w3.org/TR/server-timing/) в Go.

[Supercronic:](https://github.com/aptible/supercronic) cron для контейнеров, совместимый с crontab.
